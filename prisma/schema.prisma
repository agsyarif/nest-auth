// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255) @unique
  
  permissions RolePermission[]
  users       UserRoles[]

  @@map("roles") 
}

model User {
  id                 Int               @id @default(autoincrement())
  name               String            @db.VarChar(255)
  email              String            @db.VarChar(255) @unique
  confirmed          Boolean           @default(false)
  emailVerifiedAt    DateTime?         @db.Timestamp
  phone              String?           @db.VarChar(255)
  password           String?           @db.VarChar(255)
  userAvatarImage    String?           @db.Text
  version            Int               @default(0)
  lastPassword       String?           @db.VarChar(255)
  passwordUpdatedAt  Int?
  createdAt          DateTime @db.Timestamp @default(dbgenerated("CURRENT_TIMESTAMP"))
  updatedAt          DateTime @db.Timestamp @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) @updatedAt
  
  roles        UserRoles[]
  permissions  UserPermission[]

  @@map("users") 
}

model Permission {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  
  roles       RolePermission[]
  users       UserPermission[]
}

model RolePermission {
  roleId       Int
  permissionId Int

  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
}

model UserRoles {
  userId       Int
  roleId       Int

  user         User       @relation(fields: [userId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model UserPermission {
  userId       Int
  permissionId Int

  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([userId, permissionId])
}